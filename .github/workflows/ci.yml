name: User Management CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven

      - name: üõ† Build all microservices
        run: |
          for service in user-service billing-service analytics-service auth-service api-gateway; do
            echo "Building $service..."
            (cd $service && ./mvnw clean package -DskipTests)
          done

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      user-service-db:
        image: postgres:latest
        env:
          POSTGRES_USER: admin_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5000:5432
      auth-service-db:
        image: postgres:latest
        env:
          POSTGRES_USER: admin_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5001:5432
      kafka:
        image: bitnami/kafka:latest
        env:
          KAFKA_CFG_NODE_ID: 0
          KAFKA_CFG_PROCESS_ROLES: controller,broker
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
          KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@localhost:9093
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
        ports:
          - 9092:9092
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üöÄ Start services with docker-compose
        run: docker-compose up -d --build

      - name: ‚è≥ Wait for services to be ready
        run: sleep 30

      - name: üî• Run tests
        run: |
          for service in user-service billing-service analytics-service auth-service api-gateway; do
            echo "Running tests for $service..."
            (cd $service && ./mvnw verify)
          done

      - name: üõë Stop and clean up services
        run: docker-compose down
